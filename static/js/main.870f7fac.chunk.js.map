{"version":3,"sources":["components/Control.js","components/Value.js","actions/types.js","components/Counter.js","actions/index.js","components/App.js","reducers/counter.js","reducers/ui.js","reducers/index.js","redux.js","index.js"],"names":["Control","props","onClick","onPlus","onSubtract","onRandomizeColor","createWarning","funcName","console","warn","defaultProps","Value","number","INCREMENT","DECREMENT","SET_COLOR","connect","state","counter","color","ui","dispatch","handleIncrement","type","types","handleDecrement","handleSetColor","actions","style","background","join","Math","floor","random","App","initialState","action","reducers","combineReducers","store","createStore","ReduxProvider","children","ReactDOM","render","document","getElementById"],"mappings":"0KAEMA,EAAU,SAACC,GACb,OACI,gCACI,wBAAQC,QAASD,EAAME,OAAvB,eACA,wBAAQD,QAASD,EAAMG,WAAvB,eACA,wBAAQF,QAASD,EAAMI,iBAAvB,iDAWNC,EAAgB,SAACC,GACnB,OAAO,kBAAMC,QAAQC,KAAR,UAAgBF,EAAhB,sEAGjBP,EAAQU,aAAe,CACnBP,OAAQG,EAAc,UACtBF,WAAYE,EAAc,cAC1BD,iBAAkBC,EAAc,qBAGrBN,QC1BTW,EAAQ,SAACV,GACX,OACI,8BACKA,EAAMW,UASnBD,EAAMD,aAAe,CACjBE,QAAS,GAGED,Q,OCbFE,EAAY,YACZC,EAAY,YACZC,EAAY,YC+CVC,eArBS,SAACC,GACrB,MAAO,CACHL,OAAQK,EAAMC,QAAQN,OACtBO,MAAOF,EAAMG,GAAGD,UAIG,SAACE,GAMxB,MAAO,CACHC,gBAAiB,WAAQD,ECvCtB,CACHE,KAAMC,KDuCNC,gBAAiB,WAAQJ,EClCtB,CACHE,KAAMC,KDkCNE,eAAgB,SAACP,GAAYE,EC9Bb,SAACF,GACrB,MAAO,CACHI,KAAMC,EACNL,SD2BsCQ,CAAiBR,QAKhDH,EAjDC,SAACf,GAEb,IAWM2B,EAAQ,CACVC,WAAW,OAAD,OAAS5B,EAAMkB,MAAMW,KAAK,MAA1B,MAGd,OACI,sBAAKF,MAAOA,EAAZ,UACI,cAAC,EAAD,CAAOhB,OAAQX,EAAMW,SACrB,cAAC,EAAD,CACIT,OAAQF,EAAMqB,gBACdlB,WAAYH,EAAMwB,gBAClBpB,iBArBW,WAEnB,IAAMc,EAAQ,CACVY,KAAKC,MAAuB,GAAhBD,KAAKE,SAAiB,KAClCF,KAAKC,MAAuB,GAAhBD,KAAKE,SAAiB,KAClCF,KAAKC,MAAuB,GAAhBD,KAAKE,SAAiB,MAGtChC,EAAMyB,eAAeP,YELde,EARH,WACR,OACI,8BACI,cAAC,EAAD,O,cCFNC,EAAe,CACjBvB,OAAQ,GAqBGM,EAjBC,WAAmC,IAAlCD,EAAiC,uDAAzBkB,EAAcC,EAAW,uCAC9C,OAAQA,EAAOb,MACX,KAAKC,EACD,OAAO,2BACAP,GADP,IAEIL,OAAQK,EAAML,OAAS,IAE/B,KAAKY,EACD,OAAO,2BACAP,GADP,IAEIL,OAAQK,EAAML,OAAS,IAE/B,QACI,OAAOK,IClBbkB,EAAe,CACjBhB,MAAO,CAAC,IAAK,IAAK,MAgBPC,EAZJ,WAAmC,IAAlCH,EAAiC,uDAAzBkB,EAAcC,EAAW,uCACzC,OAAQA,EAAOb,MACX,KAAKC,EACD,OAAO,2BACAP,GADP,IAEIE,MAAOiB,EAAOjB,QAEtB,QACI,OAAOF,ICPJoB,EAJEC,YAAgB,CAC7BpB,UAASE,OCFPmB,EAAQC,YAAYH,GAUXI,EARO,SAACxC,GACnB,OACI,cAAC,IAAD,CAAUsC,MAAOA,EAAjB,SACKtC,EAAMyC,YCJnBC,IAASC,OACP,cAAC,EAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.870f7fac.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Control = (props) => {\r\n    return (\r\n        <div>\r\n            <button onClick={props.onPlus}>+</button>\r\n            <button onClick={props.onSubtract}>-</button>\r\n            <button onClick={props.onRandomizeColor}>배경색 변경</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nControl.propTypes = {\r\n    onPlus: PropTypes.func,\r\n    onSubtract: PropTypes.func,\r\n    onRandomizeColor: PropTypes.func\r\n};\r\n\r\nconst createWarning = (funcName) => {\r\n    return () => console.warn(`${funcName}가 정의되지 않았습니다.`);\r\n}\r\n\r\nControl.defaultProps = {\r\n    onPlus: createWarning('onPlus'),\r\n    onSubtract: createWarning('onSubtract'),\r\n    onRandomizeColor: createWarning('onRandomizeColor'),\r\n};\r\n\r\nexport default Control;","import PropTypes from 'prop-types';\r\n\r\nconst Value = (props) => {\r\n    return (\r\n        <div>\r\n            {props.number}\r\n        </div>\r\n    )\r\n}\r\n\r\nValue.propTypes = {\r\n    number: PropTypes.number\r\n}\r\n\r\nValue.defaultProps = {\r\n    number: -1\r\n}\r\n\r\nexport default Value;","/*\r\n    Action type을 상수로 정의\r\n    명명 규칙: 대문자, 공백은 _\r\n*/\r\n\r\nexport const INCREMENT = \"INCREMENT\";\r\nexport const DECREMENT = \"DECREMENT\";\r\nexport const SET_COLOR = \"SET_COLOR\";","import Control from \"./Control\";\r\nimport Value from \"./Value\";\r\nimport { connect, /* bindActionCreators */ } from \"react-redux\";\r\nimport * as actions from '../actions';\r\n\r\nconst Counter = (props) => {\r\n\r\n    const setRandomColor = () => {\r\n        // 200부터 255까지의 랜덤 색상 배열 생성\r\n        const color = [\r\n            Math.floor((Math.random() * 55) + 200),\r\n            Math.floor((Math.random() * 55) + 200),\r\n            Math.floor((Math.random() * 55) + 200)\r\n        ];\r\n\r\n        props.handleSetColor(color);\r\n    };\r\n\r\n    const style = {\r\n        background: `rgb(${props.color.join(', ')})`\r\n    }\r\n\r\n    return (\r\n        <div style={style}>\r\n            <Value number={props.number} />\r\n            <Control\r\n                onPlus={props.handleIncrement}\r\n                onSubtract={props.handleDecrement}\r\n                onRandomizeColor={setRandomColor} />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        number: state.counter.number,\r\n        color: state.ui.color\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    /* \r\n        bindActionCreators(actions, dispatch)를 사용해도 되나,\r\n        이를 사용할 경우 액션 이름은 actions와 같음.\r\n        즉, action 이름을 아래와 같이 커스터마이징할 수 없음.\r\n    */\r\n    return {\r\n        handleIncrement: () => { dispatch(actions.increment()) },\r\n        handleDecrement: () => { dispatch(actions.decrement()) },\r\n        handleSetColor: (color) => { dispatch(actions.setColor(color)) }\r\n    };\r\n};\r\n\r\n/* connect 함수는 Redux에 연결하는 또 다른 컴포넌트를 반환 */\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);","import * as types from './types';\r\n\r\n/* \r\n    Action 객체가 많을 경우\r\n    여러 파일로 나누어 작성\r\n*/\r\n\r\nexport const increment = () => {\r\n    return {\r\n        type: types.INCREMENT\r\n    };\r\n};\r\n\r\nexport const decrement = () => {\r\n    return {\r\n        type: types.DECREMENT\r\n    };\r\n};\r\n\r\nexport const setColor = (color) => {\r\n    return {\r\n        type: types.SET_COLOR,\r\n        color\r\n    };\r\n};\r\n","import Counter from \"./Counter\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <div>\r\n            <Counter />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;","import * as types from '../actions/types';\r\n\r\n// state\r\nconst initialState = {\r\n    number: 0\r\n};\r\n\r\n// reducer\r\nconst counter = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.INCREMENT:\r\n            return {\r\n                ...state,\r\n                number: state.number + 1\r\n            };\r\n        case types.DECREMENT:\r\n            return {\r\n                ...state,\r\n                number: state.number - 1\r\n            };\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport default counter;","import * as types from '../actions/types';\r\n\r\n// state\r\nconst initialState = {\r\n    color: [255, 255, 255]\r\n};\r\n\r\n// reducer\r\nconst ui = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.SET_COLOR:\r\n            return {\r\n                ...state,\r\n                color: action.color\r\n            };\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport default ui;","import { combineReducers } from \"redux\";\r\nimport counter from \"./counter\";\r\nimport ui from \"./ui\";\r\n\r\n/* 각각의 리듀서를 하나로 통합 */\r\nconst reducers = combineReducers({\r\n    counter, ui\r\n});\r\n\r\nexport default reducers;","import { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\nimport reducers from \"./reducers\";\r\n\r\nconst store = createStore(reducers);\r\n\r\nconst ReduxProvider = (props) => {\r\n    return (\r\n        <Provider store={store}>\r\n            {props.children}\r\n        </Provider>\r\n    );\r\n};\r\n\r\nexport default ReduxProvider;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport ReduxProvider from './redux';\n\nReactDOM.render(\n  <ReduxProvider>\n    <App />\n  </ReduxProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}